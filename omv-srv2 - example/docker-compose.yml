version: "3.7"

networks:
  traefik:
    name: traefik
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.90.0/24
  default:
    driver: bridge

########################### SERVICES
services:
  ############################# FRONTENDS

  # Portainer - WebUI for Containers
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    environment:
      - TZ=$TZ
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - $DOCKERDIR/portainer:/data
    ports:
      - $PORTAINER_PORT:9000
    networks:
      - default
    command: -H unix:///var/run/docker.sock

  # Traefik 2 - Reverse Proxy
  traefik:
    image: traefik:picodon
    container_name: traefik
    restart: always
    security_opt:
      - no-new-privileges:true
    environment:
      - TZ=$TZ
      - GODADDY_API_KEY=$GODADDY_API_KEY
      - GODADDY_API_SECRET=$GODADDY_API_SECRET
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /usr/share/zoneinfo:/usr/share/zoneinfo:ro
      - $DOCKERDIR/traefik/rules:/etc/traefik/rules
      - $DOCKERDIR/traefik/acme/acme.json:/etc/traefik/acme/acme.json
      - $DOCKERDIR/traefik/logs/traefik.log:/etc/traefik/logs/traefik.log
    ports:
      - 80:80
      - 443:443
    networks:
      traefik:
        ipv4_address: 192.168.90.254
    command:
      - --global.checkNewVersion=false
      - --global.sendAnonymousUsage=false
      - --api=true
      - --api.dashboard=true
      - --log=true
      - --log.level=DEBUG # (Default: error) DEBUG, INFO, WARN, ERROR, FATAL, PANIC
      - --accessLog=true
      - --accessLog.filePath=/etc/traefik/logs/traefik.log
      - --accessLog.bufferingSize=100
      - --accessLog.filters.statusCodes=400-499
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      - --entrypoints.https.http.tls.options=tls-opts@file
      - --entrypoints.https.http.tls.certresolver=dns-godaddy
      - --entrypoints.https.http.tls.domains[0].main=$DOMAINNAME
      - --entrypoints.https.http.tls.domains[0].sans=*.$DOMAINNAME
      - --entrypoints.https.forwardedHeaders.trustedIPs=$TRUSTEDIPS
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.endpoint=unix:///var/run/docker.sock
      - --providers.docker.network=traefik
      - --providers.docker.swarmMode=false
      - --providers.file.directory=/etc/traefik/rules
      - --providers.file.watch=true
      #- --certificatesResolvers.dns-godaddy.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.dns-godaddy.acme.email=$GODADDY_EMAIL
      - --certificatesresolvers.dns-godaddy.acme.storage=/etc/traefik/acme/acme.json
      - --certificatesresolvers.dns-godaddy.acme.dnschallenge.provider=godaddy
      - --certificatesresolvers.dns-godaddy.acme.dnschallenge.resolvers=$GODADDY_DNS1,$GODADDY_DNS2
      - --certificatesResolvers.dns-godaddy.acme.dnsChallenge.delayBeforeCheck=90
    labels:
      - traefik.enable=true
      # HTTP Routers
      - traefik.http.routers.traefik-rtr.entrypoints=https
      - traefik.http.routers.traefik-rtr.rule=Host(`traefik.$DOMAINNAME`)
      ## Services - API
      - traefik.http.routers.traefik-rtr.service=api@internal
      ## Middlewares
      - traefik.http.routers.traefik-rtr.middlewares=chain-oauth@file
      # Global redirection: http to https
      - traefik.http.routers.http-catchall.rule=HostRegexp(`{host:(www\.)?.+}`)
      - traefik.http.routers.http-catchall.entrypoints=http
      - traefik.http.routers.http-catchall.middlewares=wwwtohttps
      # Global redirection: https (www.) to https
      - traefik.http.routers.wwwsecure-catchall.rule=HostRegexp(`{host:(www\.).+}`)
      - traefik.http.routers.wwwsecure-catchall.entrypoints=https
      - traefik.http.routers.wwwsecure-catchall.tls=true
      - traefik.http.routers.wwwsecure-catchall.middlewares=wwwtohttps
      # middleware: http(s)://(www.) to  https://
      - traefik.http.middlewares.wwwtohttps.redirectregex.regex=^https?://(?:www\.)?(.+)
      - traefik.http.middlewares.wwwtohttps.redirectregex.replacement=https://$${1}
      - traefik.http.middlewares.wwwtohttps.redirectregex.permanent=true

  # Google OAuth - Single Sign On using OAuth 2.0
  # https://hub.docker.com/r/thomseddon/traefik-forward-auth
  # https://www.smarthomebeginner.com/google-oauth-with-traefik-docker/
  oauth:
    image: thomseddon/traefik-forward-auth:latest
    container_name: oauth
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    environment:
      - CLIENT_ID=$GOOGLE_CLIENT_ID
      - CLIENT_SECRET=$GOOGLE_CLIENT_SECRET
      - SECRET=$OAUTH_SECRET
      - COOKIE_DOMAIN=$DOMAINNAME
      - INSECURE_COOKIE=false
      - AUTH_HOST=oauth.$DOMAINNAME
      - URL_PATH=/_oauth
      - WHITELIST=$MY_EMAIL
      - LOG_LEVEL=info
      - LOG_FORMAT=text
      - LIFETIME=86400 # 1 day
      - DEFAULT_ACTION=auth
      - DEFAULT_PROVIDER=google
    networks:
      - traefik
    labels:
      - traefik.enable=true
      ## HTTP Routers
      - traefik.http.routers.oauth-rtr.entrypoints=https
      - traefik.http.routers.oauth-rtr.rule=Host(`oauth.$DOMAINNAME`)
      ## Middlewares
      - traefik.http.routers.oauth-rtr.middlewares=chain-oauth@file
      ## HTTP Services
      - traefik.http.routers.oauth-rtr.service=oauth-svc
      - traefik.http.services.oauth-svc.loadbalancer.server.port=$OAUTH_PORT

  # Heimdall - Unified Frontend Alternative
  heimdall:
    image: ghcr.io/linuxserver/heimdall:latest
    container_name: heimdall
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $DOCKERDIR/heimdall:/config
    # ports:
    #   - $HEIMDALL_PORT:80
    networks:
      - traefik
    labels:
      - traefik.enable=true
      ## HTTP Routers
      - traefik.http.routers.heimdall-rtr.entrypoints=https
      - traefik.http.routers.heimdall-rtr.rule=Host(`$DOMAINNAME`) || Host(`www.$DOMAINNAME`)
      ## Middlewares
      - traefik.http.routers.heimdall-rtr.middlewares=chain-oauth@file
      ## HTTP Services
      - traefik.http.routers.heimdall-rtr.service=heimdall-svc
      - traefik.http.services.heimdall-svc.loadbalancer.server.port=$HEIMDALL_PORT

  ############################# DATABASE

  # Grafana - Graphical data visualization for prometheus data
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    user: "0"
    volumes:
      - $DOCKERDIR/grafana:/var/lib/grafana
    # ports:
    #   - $GRAFANA_PORT:3000
    networks:
      - traefik
      - default
    labels:
      - traefik.enable=true
      ## HTTP Routers
      - traefik.http.routers.grafana-rtr.entrypoints=https
      - traefik.http.routers.grafana-rtr.rule=Host(`grafana.$DOMAINNAME`)
      ## Middlewares
      - traefik.http.routers.grafana-rtr.middlewares=chain-oauth@file
      ## HTTP Services
      - traefik.http.routers.grafana-rtr.service=grafana-svc
      - traefik.http.services.grafana-svc.loadbalancer.server.port=$GRAFANA_PORT

  ############################# UTILITIES

  # Bitwarden - Password management solutions
  bitwarden:
    image: bitwardenrs/server:latest
    container_name: bitwarden
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    environment:
      - ADMIN_TOKEN=$ADMIN_TOKEN
      - WEBSOCKET_ENABLED=true
      - SIGNUPS_ALLOWED=false
      - INVITATIONS_ALLOWED=true
      - LOG_FILE=/var/log/docker/bitwarden.log
      # - SMTP_HOST=smtp.gmail.com
      # - SMTP_FROM=$SMTP_EMAIL
      # - SMTP_PORT=587
      # - SMTP_SSL=true
      # - SMTP_USERNAME=$SMTP_EMAIL
      # - SMTP_PASSWORD=$SMTP_PASS
      - DOMAIN=https://bitwarden.$DOMAINNAME
    #  - DISABLE_ADMIN_TOKEN=true ### USE WITH CAUTION!! Access admin page at bitwarden.$DOMAINNAME/admin to send invitations - anyone can access, add authorization!!!
    volumes:
      - $DOCKERDIR/bitwarden:/data
      - $DOCKERDIR/bitwarden/log:/var/log/docker
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    # ports:
    #   - $BITWARDEN_PORT:80
    networks:
      - traefik
    labels:
      - traefik.enable=true
      ## HTTP Routers
      - traefik.http.routers.bitwarden-rtr.priority=1
      - traefik.http.routers.bitwarden-rtr.entrypoints=https
      - traefik.http.routers.bitwarden-rtr.rule=Host(`bitwarden.$DOMAINNAME`)
      ## Middlewares
      - traefik.http.routers.bitwarden-rtr.middlewares=chain-no-auth@file
      ## HTTP Services
      - traefik.http.routers.bitwarden-rtr.service=bitwarden-svc
      - traefik.http.services.bitwarden-svc.loadbalancer.server.port=$BITWARDEN_SVC_PORT
      ## Bitwarden WebSocket
      - traefik.http.routers.bitwardenHub-rtr.priority=2
      - traefik.http.routers.bitwardenHub-rtr.entrypoints=https
      - traefik.http.routers.bitwardenHub-rtr.rule=(Host(`bitwarden.$DOMAINNAME`) && Path(`/notifications/hub`))
      - traefik.http.routers.bitwardenHub-rtr.service=bitwardenHub-svc
      - traefik.http.services.bitwardenHub-svc.loadbalancer.server.port=$BITWARDEN_WS_PORT
      ## Admin Page - Used when DISABLE_ADMIN_TOKEN=true above
      - traefik.http.routers.bitwardenAdmin-rtr.priority=3
      - traefik.http.routers.bitwardenAdmin-rtr.entrypoints=https
      - traefik.http.routers.bitwardenAdmin-rtr.rule=(Host(`bitwarden.$DOMAINNAME`) && Path(`/admin`))
      - traefik.http.routers.bitwardenAdmin-rtr.middlewares=chain-oauth@file
      - traefik.http.routers.bitwardenAdmin-rtr.service=bitwarden-svc

  ############################# DOWNLOADERS

  # qBittorrent - Torrent downloader
  qbittorrent:
    image: ghcr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - UMASK=002
      - WEBUI_PORT=$QBITTORRENT_WEBUI
    volumes:
      - $DOCKERDIR/qbittorrent:/config
      - $BASEDIR/downloads:/downloads
    networks:
      - traefik
    ports:
      - $QBITTORRENT_PORT:6881
      # - $QBITTORRENT_WEBUI:8080
    labels:
      - traefik.enable=true
      ## HTTP Routers
      - traefik.http.routers.qbittorrent-rtr.entrypoints=https
      - traefik.http.routers.qbittorrent-rtr.rule=Host(`qbit.$DOMAINNAME`)
      ## Middlewares
      - traefik.http.routers.qbittorrent-rtr.middlewares=chain-oauth@file
      ## HTTP Services
      - traefik.http.routers.qbittorrent-rtr.service=qbittorrent-svc
      - traefik.http.services.qbittorrent-svc.loadbalancer.server.port=$QBITTORRENT_WEBUI